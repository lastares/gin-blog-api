// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-28 23:27:52.469619 +0800 CST m=+0.043026682

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tags": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "获取标签列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "当前页码",
                        "name": "page",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "每页显示条数",
                        "name": "pageSize",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Failed"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.Failed": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": -1
                },
                "msg": {
                    "type": "string",
                    "example": "failed"
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "createdAt": {
                    "type": "object",
                    "$ref": "#/definitions/util.JSONTime"
                },
                "id": {
                    "type": "integer",
                    "example": 10
                },
                "tagName": {
                    "type": "string",
                    "example": "php"
                },
                "tagStatus": {
                    "type": "integer",
                    "example": 10
                },
                "updatedAt": {
                    "type": "object",
                    "$ref": "#/definitions/util.JSONTime"
                }
            }
        },
        "util.JSONTime": {
            "type": "object"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1/",
	Schemes:     []string{},
	Title:       "博客接口文档",
	Description: "博客接口文档",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
